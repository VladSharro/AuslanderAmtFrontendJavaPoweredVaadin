# This file is a template, and might need editing before it works on your project.
# This is a sample GitLab CI/CD configuration file that should run without any modifications.
# It demonstrates a basic 3 stage CI/CD pipeline. Instead of real tests or scripts,
# it uses echo commands to simulate the pipeline execution.
#
# A pipeline is composed of independent jobs that run scripts, grouped into stages.
# Stages run in sequential order, but jobs within stages run in parallel.
#
# For more information, see: https://docs.gitlab.com/ee/ci/yaml/index.html#stages
#
# You can copy and paste this template into a new `.gitlab-ci.yml` file.
# You should not add this template to an existing `.gitlab-ci.yml` file by using the `include:` keyword.
#
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Getting-Started.gitlab-ci.yml

stages:          # List of stages for jobs, and their order of execution
  - dependencies
  - run
  - test

image: debian:bullseye-slim

node-install:
    stage: dependencies
    script:
        - apt-get install -y ca-certificates curl gnupg
        - mkdir -p /etc/apt/keyrings
        - curl -fsSL https://deb.nodesource.com/gpgkey/nodesource-repo.gpg.key | sudo gpg --dearmor -o /etc/apt/keyrings/nodesource.gpg
        - NODE_MAJOR=20
        - echo "deb [signed-by=/etc/apt/keyrings/nodesource.gpg] https://deb.nodesource.com/node_$NODE_MAJOR.x nodistro main" | sudo tee /etc/apt/sources.list.d/nodesource.list
        - apt-get update
        - apt-get install nodejs -y
        - cd ./Frontend
        - npm install --prefer-offline
        - cd ..
    cache:
        key:
            files:
                - package.json
        paths:
            - node_modules

robot-install:
    stage: dependencies
    script:
        - apt-get install python3.11
        - pip install robotframework
        - pip install robotframework-seleniumlibrary


fe-run-job:       # This job runs in the build stage, which runs first.
  stage: run
  needs: ["node-install"]
  script:
      - ng serve

e2e-test:
    stage: test
    needs: ["robot-install"]
    before_script:
        - wget https://edgedl.me.gvt1.com/edgedl/chrome/chrome-for-testing/120.0.6099.71/win64/chromedriver-win64.zip
        - mkdir -p ~/.local/bin
        - unzip chromedriver-linux64.zip -d ~/.local/bin
        - mv ~/.local/bin/chromedriver-linux64/chromedriver  ~/.local/bin/chromedriver
        - chmod +x ~/.local/bin/chromedriver
    script:
        - robot Tests/ui/home.robot