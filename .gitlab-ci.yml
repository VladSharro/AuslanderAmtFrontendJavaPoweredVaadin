### Owner: Kirill Borisov
### 
### The pipeline includes front-end precheck build, FE and BE builds and deployment, and UI testing.

stages:
  - test
  - build
  - test-after-deployment

ocr-test:
  image: python:3.11-slim
  stage: test
  when: manual
  script:
    - apt-get update
    - apt-get -y install tesseract-ocr
    - apt-get -y install ffmpeg libsm6 libxext6
    - cd OCR
    - pip install -r requirements.txt
    - cd ..
    - python OCR/tests/ocrTests.py

fe-build:
  image: debian:stable
  stage: build
  when: manual
  before_script:
    - apt-get update
    - 'command -v ssh-agent >/dev/null || ( apt-get update -y && apt-get install openssh-client -y )'
    - eval $(ssh-agent -s)
    - chmod 400 "$SSH_PRIVATE_KEY"
    - ssh-add "$SSH_PRIVATE_KEY"
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - cp "$SSH_KNOWN_HOSTS" ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
  script:
    - echo $SUDO | ssh -tt borisov@boriso02.stud.fim.uni-passau.de 'cd aspd/team2; eval $(ssh-agent); ssh-add ~/.ssh/id_rsa; git checkout main; git pull origin main; sudo docker stop aspd; sudo docker rm aspd; sudo docker build -t aspd ./Frontend/; sudo docker run --name aspd -d -p 80:80 aspd'

endpoint-test:
  image: python:3.11-bullseye
  stage: test-after-deployment
  script:
    - pip install requests
    - python Tests/api/api_tests.py

e2e-test:
  image: debian:bullseye-slim
  stage: test-after-deployment
  script:
    - apt-get update && apt-get install -y docker.io
    - service docker start
    - docker version
    - cd Tests
    - docker run --shm-size="2g" -v `pwd`:/opt/robotframework/tests:Z -e ROBOT_OPTIONS="--variable BROWSER:headlesschrome --variable DOMAIN:132.231.1.189" ppodgorsek/robot-framework
  

# e2e-test:
#   image: ppandiyan/robotframework    # this is outdated, but i really couldn't care less at this point
#   stage: test-after-deployment
#   needs: ["fe-build"]
#   allow_failure: true
#   script:
#     - cd Tests
#     - robot --variable BROWSER:headlesschrome --variable DOMAIN:132.231.1.189 --argumentfile ./options.txt
#   artifacts:
#     paths:
#       - results